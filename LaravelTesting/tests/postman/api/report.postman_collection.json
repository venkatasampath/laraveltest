{
  "info": {
    "_postman_id": "e59fc506-b452-481b-ae05-1d6b324b54c6",
    "name": "Report",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "reports",
      "item": [
        {
          "name": "projects/{id}",
          "item": [
            {
              "name": "Get project dna",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//const dnaSchema = JSON.parse(pm.environment.get(\"dnaSchema\"));",
                      "",
                      "const jsonData = pm.response.json();",
                      "",
                      "/*pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(dnaSchema)",
                      "});*/",
                      "",
                      "/*pm.test(\"Check returned dnas fields\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"se_id\",\"org_id\",\"project_id\",\"lab_id\",\"external_case_id\",\"priority\",\"sample_number\",\"mito_sequence_number\",\"mito_sequence_subgroup\",\"mito_sequence_similar\",\"mito_match_count\",\"mito_total_count\",\"mito_receive_date\",\"mito_haplogroup_id\",\"analysis_type_id\",\"mito_results_confidence\",\"mito_method\",\"external_sample_number\",\"dispostion_of_evidence\",\"mito_confirmed_regions\",\"mito_base_pairs\",\"locus\",\"mito_num_loci\",\"mito_mcc_date\",\"additional_testing\",\"sb_id\",\"priority_date\",\"btb_request_date\",\"btb_results_date\",\"disposition\",\"sample_condition\",\"weight_sample_remaining\",\"mito_request_date\",\"mito_polymorphisms\",\"mito_fasta_sequence\",\"mito_haplosubgroup\",\"austr_method\",\"austr_request_date\",\"austr_receive_date\",\"austr_results_confidence\",\"austr_sequence_number\",\"austr_sequence_subgroup\",\"austr_sequence_similar\",\"austr_match_count\",\"austr_total_count\",\"austr_num_loci\",\"austr_loci\",\"austr_mcc_date\",\"ystr_method\",\"ystr_request_date\",\"ystr_receive_date\",\"ystr_results_confidence\",\"ystr_sequence_number\",\"ystr_sequence_subgroup\",\"ystr_sequence_similar\",\"ystr_match_count\",\"ystr_total_count\",\"ystr_num_loci\",\"ystr_loci\",\"ystr_haplogroup\",\"ystr_haplosubgroup\",\"ystr_mcc_date\",\"resample_indicator\",\"notes\",\"uuid\",\"user_id\",\"custom_field_1\",\"custom_field_2\",\"custom_field_3\");",
                      "});*/",
                      "",
                      "/*pm.test(\"Check the data type of dnas feild\", function () {",
                      "    pm.expect(jsonData.data[0].id).to.be.a(\"number\");",
                      "    pm.expect(jsonData.data[0].se_id).to.be.a(\"number\");",
                      "    pm.expect(jsonData.data[0].org_id).to.be.a(\"number\");",
                      "    pm.expect(jsonData.data[0].project_id).to.be.a(\"number\");",
                      "    pm.expect(jsonData.data[0].external_case_id).to.be.a(\"string\");",
                      "    pm.expect(jsonData.data[0].priority).to.be.a(\"null\");",
                      "    pm.expect(jsonData.data[0].sample_number).to.be.a(\"string\");",
                      "    pm.expect(jsonData.data[0].mito_sequence_number).to.be.a(\"number\");",
                      "    pm.expect(jsonData.data[0].mito_sequence_subgroup).to.be.a(\"string\");",
                      "    pm.expect(jsonData.data[0].mito_sequence_similar).to.be.a(\"string\");",
                      "    pm.expect(jsonData.data[0].mito_match_count).to.be.a(\"string\");",
                      "    pm.expect(jsonData.data[0].mito_total_count).to.be.a(\"string\");",
                      "});*/",
                      "",
                      "/*pm.test(\"Display the selection criteria: \" +jsonData.criteriaSelection,);",
                      "",
                      "pm.test(\"Display count of records: \" + jsonData.count);*/",
                      "",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"mito\",\n    \"an\": [\"CIL 2003-116\"],\n    \"p1\": [\"G-01\"],\n    \"p2\": [\"X-232C\", \"X-233E\"],\n    \"mito_sequence_number_list\": [1, 5]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/dna",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "dna"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of Project DNA information",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/dna",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "dna"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/dna",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "dna"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get project individual number details",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "/*pm.test(\"response must be valid and have a body\", function(){",
                      "    pm.response.to.be.ok;",
                      "    pm.response.to.be.withBody;",
                      "    pm.response.to.be.json;",
                      "})*/",
                      "",
                      "/*pm.test(\"Display the selection criteria: \" +jsonData.criteriaSelection);",
                      "",
                      "pm.test(\"Display count of records: \" + jsonData.meta.total);*/"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true,
                "disabledSystemHeaders": {
                  "accept": true
                }
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"individual_number\": [\n            \"CIL 2003-113-I-247\"\n    ]\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/individualnumberdetails",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "individualnumberdetails"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of project individual number details",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/individualnumberdetails",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "individualnumberdetails"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/individualnumberdetails",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "individualnumberdetails"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get project isotopes",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const isotopeSchema = JSON.parse(pm.environment.get(\"isotopeSchema\"));",
                      "",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(isotopeSchema)",
                      "});",
                      "",
                      "pm.test(\"Check returned isotope fields\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"id\",\"se_id\",\"sb_id\",\"org_id\",\"project_id\",\"lab_id\",\"batch_id\",\"sample_number\",\"external_case_id\",\"results_confidence\",\"weight_sample_cleaned\",\"weight_vial_lid\",\"weight_sample_vial_lid\",\"weight_collagen\",\"yield_collagen\",\"demineralizing_start_date\",\"demineralizing_end_date\",\"analysis_requested\",\"well_location\",\"collagen_weight_used_for_analysis\",\"c_weight\",\"n_weight\",\"o_weight\",\"s_weight\",\"c_delta\",\"n_delta\",\"o_delta\",\"s_delta\",\"c_percent\",\"n_percent\",\"o_percent\",\"s_percent\",\"c_to_n_ratio\",\"c_to_o_ratio\",\"created_by\",\"updated_by\",\"created_at\",\"updated_at\",\"deleted_at\",\"uuid\",\"user_id\",\"custom_field_1\",\"custom_field_2\",\"custom_field_3\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/isotopes",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "isotopes"
                  ],
                  "query": [
                    {
                      "key": "org_id",
                      "value": "2",
                      "disabled": true
                    },
                    {
                      "key": "lab_id",
                      "value": "1",
                      "disabled": true
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of Project Isotope information",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/isotopes",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "isotopes"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/isotopes",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "isotopes"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get project specimen articulations",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"response must be valid and have a body\", function(){",
                      "    pm.response.to.be.ok;",
                      "    pm.response.to.be.withBody;",
                      "    pm.response.to.be.json;",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/specimenarticulations?sb_select[]=2",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "specimenarticulations"
                  ],
                  "query": [
                    {
                      "key": "sb_select[]",
                      "value": "2"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/specimenarticulations",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "specimenarticulations"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                },
                {
                  "name": "Successful response of project specimen articulations",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/specimenarticulations",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "specimenarticulations"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                }
              ]
            },
            {
              "name": "Get project articulations",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "////jsonData =  pm.response.json();",
                      "/*pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});*/",
                      "",
                      "//pm.test(\"Display count of records: \" + jsonData.count);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"group_select\": \"Shoulder\",\n    \"group_side_select\": \"Right\",\n    \"skeletalelement_select\":\"1280\",\n    \"sb_select[]\":\"12\",\n    \"side_select[]\":\"Left\"\n  \n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/articulations",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "articulations"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/articulations",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "articulations"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                },
                {
                  "name": "Successful response of project specimen articulations",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/articulations",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "articulations"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                }
              ]
            },
            {
              "name": "Get project anomaly",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "const jsonData = pm.response.json();",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});",
                      "pm.test(\"Display the selection criteria: \" +jsonData.criteriaSelection,);",
                      "",
                      "pm.test(\"Display count of records: \" + jsonData.meta.total);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"side_select\": \"Left\",\n    \"sb_select\": 12\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/anomaly",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "anomaly"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of project anomaly",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/anomaly",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "anomaly"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/anomaly",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "anomaly"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get project trauma",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "const jsonData = pm.response.json();",
                      "",
                      "/*pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});*/",
                      "//pm.test(\"Display count of records: \" + jsonData.meta.total);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"trauma_select\": [1,6]\n    \n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/trauma",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "trauma"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/trauma",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "trauma"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                },
                {
                  "name": "Successful response of project trauma",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/trauma",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "trauma"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                }
              ]
            },
            {
              "name": "Get project advanced",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});",
                      "",
                      "pm.test(\"Display the selection criteria: \" +jsonData.criteriaSelection);",
                      "pm.test(\"Display count of records: \" + jsonData.meta.total);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"an\": [\"CIL 2003-116\"],\n    \"p1\": [\"G-01\"],\n    \"p2\": [\"X-232C\", \"X-233E\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/advanced",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "advanced"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of project advanced",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/advanced",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "advanced"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/advanced",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "advanced"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get project measurements",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});",
                      "",
                      "pm.test(\"Display the selection criteria: \" +jsonData.criteriaSelection,);",
                      "",
                      "pm.test(\"Display count of records: \" + jsonData.meta.total);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"sb_select\":[37],\n    \"side_select\":[\"Right\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/measurements",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "measurements"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/measurements",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "measurements"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                },
                {
                  "name": "Successful response of project advanced",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/measurements",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "measurements"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
                }
              ]
            },
            {
              "name": "Get project zones",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "const jsonData = pm.response.json();",
                      "",
                      "/*pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});*/",
                      "",
                      "pm.test(\"Display the selection criteria: \" +jsonData.criteriaSelection,);",
                      "",
                      "pm.test(\"Display count of records: \" + jsonData.count);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n   \n    \"sb_select\":\"37\",\n    \"zone_select\": [97]\n  \n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/zones?search_type_select=Inclusive Only",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "zones"
                  ],
                  "query": [
                    {
                      "key": "search_type_select",
                      "value": "Inclusive Only"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/zones",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "zones"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                },
                {
                  "name": "Successful response of project zones",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/zones",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "zones"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
                }
              ]
            },
            {
              "name": "Get project pathology",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "const jsonData = pm.response.json();",
                      "",
                      "/*pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});*/",
                      "",
                      "//pm.test(\"Display the selection criteria: \" +jsonData.criteriaSelection);",
                      "",
                      "//pm.test(\"Display count of records: \" + jsonData.meta.total);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{per_page}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pathology_select\": [1]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/pathology",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "pathology"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of project Pathology",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/pathology",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "pathology"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/pathology",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "pathology"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get project individual number",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});",
                      "pm.test(\"Display count of records: \" + jsonData.count);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    },
                    {
                      "key": "password",
                      "value": "{{per_page}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/individualnumber?page=1&per_page=50",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "individualnumber"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "per_page",
                      "value": "50"
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of project individual number",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/individualnumber",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "individualnumber"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/individualnumber",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "individualnumber"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get project methods",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "\n{\n        \"sb_select\": [\n            \"32\"\n        ],\n        \"method_select\": [\n            \"62\"\n        ],\n        \"method_feature_select\": [\n            \"89\"\n        ],\n        \"score_select\": \"1\",\n        \"range_select\": \"2\",\n        \"page\": \"1\",\n        \"per_page\": \"100\"\n    }"
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/methods",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "methods"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/methods",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "methods"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                },
                {
                  "name": "Successful response of project methods",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/methods",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "methods"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
                }
              ]
            },
            {
              "name": "Get project bone group",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/bonegroup",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "bonegroup"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of project bone group",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/bonegroup",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "bonegroup"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/bonegroup",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "bonegroup"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get project specimen-comparison",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "/*const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});*/"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n        \"listIds\": [\n            \"1356\",\n            \"1321\",\n            \"9537\"\n        ]\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/projects/:id/specimen-comparison",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "projects",
                    ":id",
                    "specimen-comparison"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/specimen-comparison",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "specimen-comparison"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                },
                {
                  "name": "Successful response of project specimen-comparison",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/projects/:id/specimen-comparison",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "projects",
                        ":id",
                        "specimen-comparison"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "orgs/{id}",
          "item": [
            {
              "name": "Get org dna",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//const dnaSchema = JSON.parse(pm.environment.get(\"dnaSchema\"));",
                      "const jsonData = pm.response.json();",
                      "",
                      "/*pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(dnaSchema)",
                      "});*/",
                      "",
                      "/*pm.test(\"Check returned dnas fields\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"id\",\"se_id\",\"org_id\",\"project_id\",\"lab_id\",\"external_case_id\",\"priority\",\"sample_number\",\"mito_sequence_number\",\"mito_sequence_subgroup\",\"mito_sequence_similar\",\"mito_match_count\",\"mito_total_count\",\"mito_receive_date\",\"mito_haplogroup_id\",\"analysis_type_id\",\"mito_results_confidence\",\"mito_method\",\"external_sample_number\",\"dispostion_of_evidence\",\"mito_confirmed_regions\",\"mito_base_pairs\",\"locus\",\"mito_num_loci\",\"mito_mcc_date\",\"additional_testing\",\"sb_id\",\"priority_date\",\"btb_request_date\",\"btb_results_date\",\"disposition\",\"sample_condition\",\"weight_sample_remaining\",\"mito_request_date\",\"mito_polymorphisms\",\"mito_fasta_sequence\",\"mito_haplosubgroup\",\"austr_method\",\"austr_request_date\",\"austr_receive_date\",\"austr_results_confidence\",\"austr_sequence_number\",\"austr_sequence_subgroup\",\"austr_sequence_similar\",\"austr_match_count\",\"austr_total_count\",\"austr_num_loci\",\"austr_loci\",\"austr_mcc_date\",\"ystr_method\",\"ystr_request_date\",\"ystr_receive_date\",\"ystr_results_confidence\",\"ystr_sequence_number\",\"ystr_sequence_subgroup\",\"ystr_sequence_similar\",\"ystr_match_count\",\"ystr_total_count\",\"ystr_num_loci\",\"ystr_loci\",\"ystr_haplogroup\",\"ystr_haplosubgroup\",\"ystr_mcc_date\",\"resample_indicator\",\"notes\",\"uuid\",\"user_id\",\"custom_field_1\",\"custom_field_2\",\"custom_field_3\");",
                      "});",
                      "",
                      "pm.test(\"Display the selection criteria: \" +jsonData.criteriaSelection,);",
                      "",
                      "pm.test(\"Display count of records \" + jsonData.count);*/"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"mito\",\n    \"an\": [\"CIL 2003-116\"],\n    \"p1\": [\"G-01\"],\n    \"p2\": [\"X-232C\", \"X-233E\"],\n    \"mito_sequence_number_list\": [1, 5]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/orgs/:id/dna",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "orgs",
                    ":id",
                    "dna"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of org dna",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/orgs/:id/dna",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "orgs",
                        ":id",
                        "dna"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/orgs/:id/dna",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "orgs",
                        ":id",
                        "dna"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get org individual number details",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "",
                      "/*const specimenSchema = JSON.parse(pm.environment.get(\"specimenSchema\"));",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(specimenSchema)",
                      "});*/",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"sb_select\": [\"37\"],\n    \"side_select\": [\"Right\"]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/orgs/:id/individualnumberdetails",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "orgs",
                    ":id",
                    "individualnumberdetails"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of org individual number details",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/orgs/:id/individualnumberdetails",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "orgs",
                        ":id",
                        "individualnumberdetails"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/orgs/:id/individualnumberdetails",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "orgs",
                        ":id",
                        "individualnumberdetails"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            },
            {
              "name": "Get org isotopes",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const isotopeSchema = JSON.parse(pm.environment.get(\"isotopeSchema\"));",
                      "var jsonData = pm.response.json();",
                      "",
                      "pm.test('Schema is valid', function () {",
                      "    pm.response.to.have.jsonSchema(isotopeSchema)",
                      "});",
                      "",
                      "pm.test(\"Check response variables\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"project_id\", \"individual_number\", \"sb_id\", \"side\",\"sample_number\");",
                      "});",
                      "",
                      "pm.test(\"Check returned isotope fields\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"id\",\"se_id\",\"sb_id\",\"org_id\",\"project_id\",\"lab_id\",\"batch_id\",\"sample_number\",\"external_case_id\",\"results_confidence\",\"weight_sample_cleaned\",\"weight_vial_lid\",\"weight_sample_vial_lid\",\"weight_collagen\",\"yield_collagen\",\"demineralizing_start_date\",\"demineralizing_end_date\",\"analysis_requested\",\"well_location\",\"collagen_weight_used_for_analysis\",\"c_weight\",\"n_weight\",\"o_weight\",\"s_weight\",\"c_delta\",\"n_delta\",\"o_delta\",\"s_delta\",\"c_percent\",\"n_percent\",\"o_percent\",\"s_percent\",\"c_to_n_ratio\",\"c_to_o_ratio\",\"created_by\",\"updated_by\",\"created_at\",\"updated_at\",\"deleted_at\",\"uuid\",\"user_id\",\"custom_field_1\",\"custom_field_2\",\"custom_field_3\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{org_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/api/reports/orgs/:id/isotopes",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "reports",
                    "orgs",
                    ":id",
                    "isotopes"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "2",
                      "type": "string",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Successful response of org isotopes",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/orgs/:id/isotopes",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "orgs",
                        ":id",
                        "isotopes"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "x-next",
                      "value": "lab",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                },
                {
                  "name": "unexpected error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/reports/orgs/:id/isotopes",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "reports",
                        "orgs",
                        ":id",
                        "isotopes"
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Get json method features array",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "/*pm.test(\"response must be valid and have a body\", function(){",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "})*/"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{org_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"sb_select\": [\"32\"],\n    \"method_select\": [\"62\"],\n    \"method_feature_select\": [\"89\"],\n    \"score_select\": \"1\",\n    \"range_select\": \"2\",\n    \"page\": \"1\",\n    \"per_page\": \"100\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/reports/jsonmethodfeaturesarray",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "reports",
                "jsonmethodfeaturesarray"
              ]
            }
          },
          "response": [
            {
              "name": "unexpected error",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/reports/jsonmethodfeaturesarray",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "reports",
                    "jsonmethodfeaturesarray"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
            },
            {
              "name": "Successful response of json method features array",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/reports/jsonmethodfeaturesarray",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "reports",
                    "jsonmethodfeaturesarray"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "x-next",
                  "value": "lab",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
            }
          ]
        },
        {
          "name": "Get json scores array",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "/*pm.test(\"response must be valid and have a body\", function(){",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "})*/"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{org_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"method_feature_select\" : \"578\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/reports/jsonscoresarray",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "reports",
                "jsonscoresarray"
              ]
            }
          },
          "response": [
            {
              "name": "unexpected error",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/reports/jsonscoresarray",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "reports",
                    "jsonscoresarray"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
            },
            {
              "name": "Successful response of json scores array",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/reports/jsonscoresarray",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "reports",
                    "jsonscoresarray"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "x-next",
                  "value": "lab",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
            }
          ]
        },
        {
          "name": "Get json ranges array",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "/*pm.test(\"response must be valid and have a body\", function(){",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "})*/"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{org_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"method_feature_select\" : \"578\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/reports/jsonrangesarray",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "reports",
                "jsonrangesarray"
              ]
            }
          },
          "response": [
            {
              "name": "unexpected error",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/reports/jsonrangesarray",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "reports",
                    "jsonrangesarray"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"code\": 57411696,\n \"message\": \"sit enim\"\n}"
            },
            {
              "name": "Successful response of json ranges array",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/reports/jsonrangesarray",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "reports",
                    "jsonrangesarray"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "x-next",
                  "value": "lab",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"data\": [],\n \"links\": {},\n \"meta\": {},\n \"status\": \"\"\n}"
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "//const jsonData = pm.response.json();",
          "pm.test(\"Status code is correct\", () => {",
          "  pm.expect(pm.response.code).to.be.oneOf([200,201,403,400,422,500]);",
          "});",
          "",
          "pm.test(\"Active Environment Test\", () => {",
          "  pm.expect(pm.environment.name).to.eql(\"Testing\");",
          "});",
          "",
          "pm.test(\"Response time is less than 20s\", function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(20000);",
          "});",
          "",
          "",
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "{{base_url}}/api"
    },
    {
      "key": "dnaSchema",
      "value": "{\"type\":[\"object\",\"array\"],\"required\":[\"data\",\"meta\",\"status\"],\"externalDocs\":{\"url\":\"https://github.com/SachinPawaskarUNO/cora25/blob/master/docs/TechnicalManual/Database/CoRA%20Tables.md#dnas-table\"},\"properties\":{\"data\":{\"type\":[\"object\",\"array\"],\"title\":\"The data schema\",\"description\":\"List of all Specimens articulations for Cora\",\"default\":[],\"items\":{\"anyOf\":[{\"type\":[\"object\",\"array\"],\"title\":\"The first anyOf schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":{},\"required\":[\"id\",\"se_id\",\"org_id\",\"project_id\",\"additional_testing\"],\"properties\":{\"id\":{\"type\":\"integer\"},\"se_id\":{\"type\":\"integer\"},\"org_id\":{\"type\":\"integer\"},\"project_id\":{\"type\":\"integer\"},\"lab_id\":{\"type\":\"integer\"},\"external_case_id\":{\"type\":\"string\"},\"priority\":{\"type\":[\"string\",\"null\"]},\"sample_number\":{\"type\":[\"string\",\"null\"]},\"mito_sequence_number\":{\"type\":\"integer\"},\"mito_sequence_subgroup\":{\"type\":\"string\"},\"mito_sequence_similar\":{\"type\":[\"string\",\"null\"]},\"mito_match_count\":{\"type\":[\"string\",\"null\"]},\"mito_total_count\":{\"type\":[\"string\",\"null\"]},\"mito_receive_date\":{\"type\":\"string\"},\"mito_haplogroup_id\":{\"type\":[\"integer\",\"null\"]},\"analysis_type_id\":{\"type\":[\"integer\",\"null\"]},\"mito_results_confidence\":{\"type\":\"string\"},\"mito_method\":{\"type\":\"string\"},\"external_sample_number\":{\"type\":[\"string\",\"null\"]},\"disposition_of_evidence\":{\"type\":\"string\"},\"mito_confirmed_regions\":{\"type\":[\"string\",\"null\"]},\"mito_base_pairs\":{\"type\":[\"string\",\"null\"]},\"locus\":{\"type\":[\"string\",\"null\"]},\"mito_num_loci\":{\"type\":[\"integer\",\"null\"]},\"mito_mcc_date\":{\"type\":[\"string\",\"null\"]},\"sb_id\":{\"type\":\"integer\"},\"additional_testing\":{\"type\":\"boolean\"},\"priority_date\":{\"type\":[\"string\",\"null\"]},\"btb_request_date\":{\"type\":[\"string\",\"null\"]},\"btb_results_date\":{\"type\":[\"string\",\"null\"]},\"disposition\":{\"type\":[\"string\",\"null\"]},\"sample_condition\":{\"type\":[\"string\",\"null\"]},\"weight_sample_remaining\":{\"type\":[\"integer\",\"null\"]},\"mito_request_date\":{\"type\":[\"string\",\"null\"]},\"mito_polymorphisms\":{\"type\":[\"string\",\"null\"]},\"mito_fasta_sequence\":{\"type\":[\"string\",\"null\"]},\"mito_haplosubgroup\":{\"type\":[\"string\",\"null\"]},\"austr_method\":{\"type\":[\"string\",\"null\"]},\"austr_request_date\":{\"type\":[\"string\",\"null\"]},\"austr_receive_date\":{\"type\":[\"string\",\"null\"]},\"austr_results_confidence\":{\"type\":[\"string\",\"null\"]},\"austr_sequence_number\":{\"type\":[\"string\",\"null\"]},\"austr_sequence_subgroup\":{\"type\":[\"string\",\"null\"]},\"austr_sequence_similar\":{\"type\":[\"string\",\"null\"]},\"austr_match_count\":{\"type\":[\"integer\",\"null\"]},\"austr_total_count\":{\"type\":[\"integer\",\"null\"]},\"austr_num_loci\":{\"type\":[\"integer\",\"null\"]},\"austr_loci\":{\"type\":[\"string\",\"null\"]},\"austr_mcc_date\":{\"type\":[\"string\",\"null\"]},\"ystr_method\":{\"type\":[\"string\",\"null\"]},\"ystr_request_date\":{\"type\":[\"string\",\"null\"]},\"ystr_receive_date\":{\"type\":[\"string\",\"null\"]},\"ystr_results_confidence\":{\"type\":[\"string\",\"null\"]},\"ystr_sequence_number\":{\"type\":[\"string\",\"null\"]},\"ystr_sequence_subgroup\":{\"type\":[\"string\",\"null\"]},\"ystr_sequence_similar\":{\"type\":[\"string\",\"null\"]},\"ystr_match_count\":{\"type\":[\"integer\",\"null\"]},\"ystr_total_count\":{\"type\":[\"integer\",\"null\"]},\"ystr_num_loci\":{\"type\":[\"integer\",\"null\"]},\"ystr_loci\":{\"type\":[\"string\",\"null\"]},\"ystr_haplogroup\":{\"type\":[\"integer\",\"null\"]},\"ystr_haplosubgroup\":{\"type\":[\"string\",\"null\"]},\"ystr_mcc_date\":{\"type\":[\"string\",\"null\"]},\"resample_indicator\":{\"type\":[\"boolean\",\"null\"]},\"notes\":{\"type\":[\"string\",\"null\"]},\"uuid\":{\"type\":[\"string\",\"null\"]},\"user_id\":{\"type\":[\"integer\",\"null\"]},\"custom_field_1\":{\"type\":[\"string\",\"null\"]},\"custom_field_2\":{\"type\":[\"string\",\"null\"]},\"custom_field_3\":{\"type\":[\"string\",\"null\"]},\"created_by\":{\"type\":[\"string\",\"null\"]},\"updated_by\":{\"type\":[\"string\",\"null\"]},\"created_at\":{\"type\":[\"string\",\"null\"]},\"updated_at\":{\"type\":[\"string\",\"null\"]},\"deleted_at\":{\"type\":[\"string\",\"null\"]},\"tag\":{\"type\":\"string\"}},\"additionalProperties\":true}]}},\"links\":{\"type\":\"object\",\"title\":\"The links schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":{},\"required\":[\"first\",\"last\",\"prev\",\"next\"],\"properties\":{\"first\":{\"type\":\"string\",\"title\":\"The first schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":\"\"},\"last\":{\"type\":\"string\",\"title\":\"The last schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":\"\"},\"prev\":{\"type\":[\"string\",\"null\"],\"title\":\"The prev schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":null},\"next\":{\"type\":[\"string\",\"null\"],\"title\":\"The next schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":null}},\"additionalProperties\":true},\"meta\":{\"type\":\"object\",\"title\":\"The meta schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":{},\"required\":[\"current_page\",\"from\",\"last_page\",\"path\",\"per_page\",\"to\",\"total\",\"app\",\"app_version\",\"api_version\",\"author\",\"copyright\"],\"properties\":{\"current_page\":{\"type\":\"integer\",\"title\":\"The current_page schema\",\"description\":\"Current page number\",\"default\":0},\"from\":{\"type\":\"integer\",\"title\":\"The from schema\",\"description\":\"Starting page number\",\"default\":0},\"last_page\":{\"type\":\"integer\",\"title\":\"The last_page schema\",\"description\":\"Last page number\",\"default\":0},\"path\":{\"type\":\"string\",\"title\":\"The path schema\",\"description\":\"API URL\",\"default\":\"\"},\"per_page\":{\"type\":\"integer\",\"title\":\"The per_page schema\",\"description\":\"Results per page\",\"default\":0},\"to\":{\"type\":\"integer\",\"title\":\"The to schema\",\"description\":\"Next page number\",\"default\":0},\"total\":{\"type\":\"integer\",\"title\":\"The total schema\",\"description\":\"Total number of DNA\",\"default\":0},\"app\":{\"type\":\"string\",\"title\":\"The app schema\",\"description\":\"Application name\",\"default\":\"\"},\"app_version\":{\"type\":\"string\",\"title\":\"The app_version schema\",\"description\":\"Application version\",\"default\":\"\"},\"api_version\":{\"type\":\"string\",\"title\":\"The api_version schema\",\"description\":\"Version of API\",\"default\":\"\"},\"author\":{\"type\":\"string\",\"title\":\"The author schema\",\"description\":\"Author of application\",\"default\":\"\"},\"copyright\":{\"type\":\"string\",\"title\":\"The copyright schema\",\"description\":\"Owner of application copyright\",\"default\":\"\"}},\"additionalProperties\":true},\"status\":{\"type\":\"string\",\"title\":\"The status schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":\"\"}}}",
      "disabled": true
    },
    {
      "key": "isotopeSchema",
      "value": "{\"type\":[\"object\",\"array\"],\"required\":[\"data\",\"meta\",\"status\"],\"externalDocs\":{\"url\":\"https://github.com/SachinPawaskarUNO/cora25/blob/master/docs/TechnicalManual/Database/CoRA%20Tables.md#isotopes-table\"},\"properties\":{\"data\":{\"type\":[\"object\",\"array\"],\"title\":\"The data schema\",\"description\":\"List of all Isotope for Cora\",\"default\":[],\"items\":{\"anyOf\":[{\"type\":[\"object\",\"array\"],\"title\":\"The first anyOf schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":{},\"required\":[\"id\",\"se_id\",\"sb_id\",\"org_id\",\"project_id\"],\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"ID of Isotope sample record\"},\"se_id\":{\"type\":\"integer\",\"description\":\"\"},\"sb_id\":{\"type\":\"integer\",\"description\":\"ID of Bone\"},\"org_id\":{\"type\":\"integer\",\"description\":\"\"},\"project_id\":{\"type\":\"integer\",\"description\":\"\"},\"lab_id\":{\"type\":\"integer\",\"description\":\"\"},\"batch_id\":{\"type\":[\"integer\",\"null\"],\"description\":\"\"},\"sample_number\":{\"type\":\"string\",\"description\":\"\"},\"external_case_id\":{\"type\":[\"string\",\"null\"],\"description\":\"\"},\"results_confidence\":{\"type\":[\"string\",\"null\"],\"description\":\"\"},\"weight_sample_cleaned\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"weight_vial_lid\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"weight_sample_vial_lid\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"weight_collagen\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"yield_collagen\":{\"type\":[\"number\",\"null\"],\"description\":\"\"},\"demineralizing_start_date\":{\"type\":[\"string\",\"null\"],\"description\":\"\"},\"demineralizing_end_date\":{\"type\":[\"string\",\"null\"],\"description\":\"\"},\"analysis_requested\":{\"type\":[\"string\",\"null\"],\"description\":\"\"},\"well_location\":{\"type\":[\"string\",\"null\"],\"description\":\"\"},\"collagen_weight_used_for_analysis\":{\"type\":[\"number\",\"null\"],\"description\":\"\"},\"c_weight\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"n_weight\":{\"type\":[\"number\",\"null\"],\"description\":\"\"},\"o_weight\":{\"type\":[\"number\",\"null\"],\"description\":\"\"},\"s_weight\":{\"type\":[\"number\",\"null\"],\"description\":\"\"},\"c_delta\":{\"type\":[\"integer\",\"null\",\"string\"],\"description\":\"\"},\"n_delta\":{\"type\":[\"number\",\"null\"],\"description\":\"\"},\"o_delta\":{\"type\":[\"number\",\"null\"],\"description\":\"\"},\"s_delta\":{\"type\":[\"number\",\"null\"],\"description\":\"\"},\"c_percent\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"n_percent\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"o_percent\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"s_percent\":{\"type\":[\"number\",\"null\"],\"description\":\"\"},\"c_to_n_ratio\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"c_to_o_ratio\":{\"type\":[\"number\",\"null\",\"string\"],\"description\":\"\"},\"created_by\":{\"type\":[\"string\",\"null\"],\"description\":\"User who first created the DNA\"},\"updated_by\":{\"type\":[\"string\",\"null\"],\"description\":\"User who last updated the DNA\"},\"created_at\":{\"type\":\"string\",\"description\":\"Date and Time of creation\"},\"updated_at\":{\"type\":\"string\",\"description\":\"Date and Time of last update\"},\"deleted_at\":{\"type\":[\"string\",\"null\"],\"description\":\"Date and Time of recored deletion\"},\"uuid\":{\"type\":[\"string\",\"null\"],\"description\":\"\"},\"user_id\":{\"type\":[\"integer\",\"null\"],\"description\":\"\"},\"custom_field_1\":{\"type\":[\"string\",\"null\"],\"description\":\"Custom field 1 for additional data\"},\"custom_field_2\":{\"type\":[\"string\",\"null\"],\"description\":\"Custom field 2 for additional data\"},\"custom_field_3\":{\"type\":[\"string\",\"null\"],\"description\":\"Custom field 3 for additional data\"},\"tag\":{\"type\":\"string\"}},\"additionalProperties\":true}]}},\"links\":{\"type\":\"object\",\"title\":\"The links schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":{},\"required\":[\"first\",\"last\",\"prev\",\"next\"],\"properties\":{\"first\":{\"type\":\"string\",\"title\":\"The first schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":\"\"},\"last\":{\"type\":\"string\",\"title\":\"The last schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":\"\"},\"prev\":{\"type\":[\"string\",\"null\"],\"title\":\"The prev schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":null},\"next\":{\"type\":[\"string\",\"null\"],\"title\":\"The next schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":null}},\"additionalProperties\":true},\"meta\":{\"type\":\"object\",\"title\":\"The meta schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":{},\"required\":[\"app\",\"app_version\",\"api_version\",\"author\",\"copyright\"],\"properties\":{\"current_page\":{\"type\":\"integer\",\"title\":\"The current_page schema\",\"description\":\"Current page number\",\"default\":0},\"from\":{\"type\":[\"integer\",\"null\"],\"title\":\"The from schema\",\"description\":\"Starting page number\",\"default\":0},\"last_page\":{\"type\":\"integer\",\"title\":\"The last_page schema\",\"description\":\"Last page number\",\"default\":0},\"path\":{\"type\":\"string\",\"title\":\"The path schema\",\"description\":\"API URL\",\"default\":\"\"},\"per_page\":{\"type\":\"integer\",\"title\":\"The per_page schema\",\"description\":\"Results per page\",\"default\":0},\"to\":{\"type\":[\"integer\",\"null\"],\"title\":\"The to schema\",\"description\":\"Next page number\",\"default\":0},\"total\":{\"type\":\"integer\",\"title\":\"The total schema\",\"description\":\"Total number of DNA\",\"default\":0},\"app\":{\"type\":\"string\",\"title\":\"The app schema\",\"description\":\"Application name\",\"default\":\"\"},\"app_version\":{\"type\":\"string\",\"title\":\"The app_version schema\",\"description\":\"Application version\",\"default\":\"\"},\"api_version\":{\"type\":\"string\",\"title\":\"The api_version schema\",\"description\":\"Version of API\",\"default\":\"\"},\"author\":{\"type\":\"string\",\"title\":\"The author schema\",\"description\":\"Author of application\",\"default\":\"\"},\"copyright\":{\"type\":\"string\",\"title\":\"The copyright schema\",\"description\":\"Owner of application copyright\",\"default\":\"\"}},\"additionalProperties\":true},\"status\":{\"type\":\"string\",\"title\":\"The status schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":\"\"}}}",
      "disabled": true
    },
    {
      "key": "specimenSchema",
      "value": "{\"type\":[\"object\",\"array\"],\"required\":[\"data\",\"meta\",\"status\"],\"externalDocs\":{\"url\":\"https://github.com/SachinPawaskarUNO/cora25/blob/master/docs/TechnicalManual/Database/CoRA%20Tables.md#users-table\"},\"properties\":{\"data\":{\"type\":[\"object\",\"array\"],\"title\":\"The data schema\",\"description\":\"List of all Specimens articulations for Cora\",\"default\":[],\"items\":{\"anyOf\":[{\"type\":[\"object\",\"array\"],\"title\":\"The first anyOf schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":{},\"required\":[\"id\",\"sb_id\",\"user_id\",\"org_id\",\"project_id\",\"accession_number\",\"designator\",\"side\",\"completeness\",\"measured\",\"dna_sampled\",\"ct_scanned\",\"xray_scanned\",\"clavicle_triage\",\"inventoried\",\"reviewed\",\"isotope_sampled\"],\"properties\":{\"id\":{\"type\":\"integer\"},\"sb_id\":{\"type\":\"integer\"},\"user_id\":{\"type\":\"integer\"},\"org_id\":{\"type\":\"integer\"},\"project_id\":{\"type\":\"integer\"},\"review_id\":{\"type\":\"integer\"},\"accession_number\":{\"type\":\"string\"},\"provenance1\":{\"type\":[\"string\",\"null\"]},\"provenance2\":{\"type\":[\"string\",\"null\"]},\"designator\":{\"type\":[\"string\",\"null\"]},\"side\":{\"type\":[\"string\",\"null\"]},\"completeness\":{\"type\":[\"string\",\"null\"]},\"measured\":{\"type\":[\"boolean\",\"null\"]},\"dna_sampled\":{\"type\":[\"boolean\",\"null\"]},\"ct_scanned\":{\"type\":[\"boolean\",\"null\"]},\"xray_scanned\":{\"type\":[\"boolean\",\"null\"]},\"clavicle_triage\":{\"type\":[\"boolean\",\"null\"]},\"inventoried\":{\"type\":[\"boolean\",\"null\"]},\"reviewed\":{\"type\":[\"boolean\",\"null\"]},\"external_id\":{\"type\":[\"string\",\"null\"]},\"individual_number\":{\"type\":[\"string\",\"null\"]},\"inventoried_at\":{\"type\":[\"string\",\"null\"]},\"reviewed_at\":{\"type\":[\"string\",\"null\"]},\"created_by\":{\"type\":[\"string\",\"null\"]},\"updated_by\":{\"type\":[\"string\",\"null\"]},\"created_at\":{\"type\":[\"string\",\"null\"]},\"updated_at\":{\"type\":[\"string\",\"null\"]},\"deleted_at\":{\"type\":[\"string\",\"null\"]},\"consolidated_an\":{\"type\":[\"string\",\"null\"]},\"isotope_sampled\":{\"type\":[\"boolean\",\"null\"]},\"count\":{\"type\":[\"integer\",\"null\"]},\"mass\":{\"type\":[\"number\",\"null\"]},\"bone_group\":{\"type\":[\"string\",\"null\"]},\"bone_group_id\":{\"type\":[\"string\",\"null\"]},\"inventoried_by_id\":{\"type\":[\"integer\",\"null\"]},\"remains_status\":{\"type\":[\"string\",\"null\"]},\"remains_release_date\":{\"type\":[\"string\",\"null\"]},\"identification_date\":{\"type\":[\"string\",\"null\"]},\"3D_scanned\":{\"type\":[\"boolean\",\"null\"]},\"notes\":{\"type\":[\"string\",\"null\"]},\"ct_scanned_date\":{\"type\":[\"string\",\"null\"]},\"xray_scanned_date\":{\"type\":[\"string\",\"null\"]},\"3D_scanned_date\":{\"type\":[\"string\",\"null\"]},\"custom_field_1\":{\"type\":[\"string\",\"null\"]},\"custom_field_2\":{\"type\":[\"string\",\"null\"]},\"custom_field_3\":{\"type\":[\"string\",\"null\"]},\"mito_sequence_number\":{\"type\":[\"integer\",\"null\"]},\"tag\":{\"type\":\"string\"}},\"additionalProperties\":true}]}},\"links\":{\"type\":\"object\",\"title\":\"The links schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":{},\"required\":[\"first\",\"last\",\"prev\",\"next\"],\"properties\":{\"first\":{\"type\":\"string\"},\"last\":{\"type\":\"string\"},\"prev\":{\"type\":[\"string\",\"null\"]},\"next\":{\"type\":[\"string\",\"null\"]}},\"additionalProperties\":true},\"meta\":{\"type\":\"object\",\"title\":\"The meta schema\",\"description\":\"An explanation about the purpose of this instance.\",\"default\":{},\"required\":[\"app\",\"app_version\",\"api_version\",\"author\",\"copyright\"],\"properties\":{\"current_page\":{\"type\":\"integer\"},\"from\":{\"type\":\"integer\"},\"last_page\":{\"type\":\"integer\"},\"path\":{\"type\":\"string\"},\"per_page\":{\"type\":[\"integer\",\"null\",\"string\"]},\"to\":{\"type\":\"integer\"},\"total\":{\"type\":\"integer\"},\"app\":{\"type\":\"string\"},\"app_version\":{\"type\":\"string\"},\"api_version\":{\"type\":\"string\"},\"author\":{\"type\":\"string\"},\"copyright\":{\"type\":\"string\"}},\"additionalProperties\":true},\"status\":{\"type\":\"string\"}}}",
      "disabled": true
    }
  ]
}